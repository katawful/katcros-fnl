#!/bin/bash








FILE='fnl/lualine/themes/kat.fnl'

# sed -is 's/(\. (groups.mainFG) 1)/colors.kat.fg.auto.color/g' "$FILE"
# sed -is 's/(\. (groups.mainBG) 1)/colors.kat.bg.base.color/g' "$FILE"
# sed -is 's/(\. (groups.highlightBG) 1)/colors.kat.purple.base.color/g' "$FILE"
# sed -is 's/(\. (groups.fillBG) 1)/colors.kat.pink.base.color/g' "$FILE"
# sed -is 's/(\. (groups.selectionBG) 1)/colors.kat.blue.base.color/g' "$FILE"
# sed -is 's/(\. (groups.shadowBG) 1)/colors.kat.bg.shadow.color/g' "$FILE"
# sed -is 's/(\. (groups.errorBG) 1)/colors.kat.red.base.color/g' "$FILE"
# sed -is 's/(\. (groups.infoBG) 1)/colors.kat.orange.base.color/g' "$FILE"
# sed -is 's/(\. (groups.auxBG) 1)/colors.kat.green.auto.color/g' "$FILE"
# sed -is 's/(\. (groups.warningBG) 1)/colors.kat.red.darken.color/g' "$FILE"
# sed -is 's/(\. (groups.umbraFG) 1)/colors.kat.fg.umbra.color/g' "$FILE"
# sed -is 's/(\. (colors.normal-colors) :green)/colors.kat.green.base.color/g' "$FILE"
# sed -is 's/(\. (colors.background) 1)/colors.kat.bg.base.color/g' "$FILE"
# sed -is 's/(\. (colors.foreground) 3)/colors.kat.fg.shadow.color/g' "$FILE"
# sed -is 's/(\. (colors.foreground) 6)/colors.kat.fg.sixth.color/g' "$FILE"

# for i in $(find 'fnl/katdotnvim/' -name "*.fnl"); do
sed -is 's/(. (\(groups\.\)\?mainFG) 2)/7/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?mainBG) 2)/0/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?umbraFG) 2)/15/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?umbraBG) 2)/8/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?shadowBG) 2)/16/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?shadowFG) 2)/16/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?meldBG) 2)/16/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?meldFG) 2)/16/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?selectionFG) 2)/7/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?selectionBG) 2)/4/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?selectionBG) 3)/12/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?fillFG) 2)/7/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?fillBG) 2)/5/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?fillBG) 3)/13/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?highlightFG) 2)/7/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?highlightBG) 2)/6/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?highlightBG) 3)/14/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?errorFG) 2)/7/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?errorBG) 2)/1/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?warningFG) 2)/7/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?warningBG) 2)/9/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?infoFG) 2)/7/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?infoBG) 2)/3/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?infoBG) 3)/11/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?auxFG) 2)/7/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?auxBG) 2)/2/g' "$FILE"
sed -is 's/(. (\(groups\.\)\?auxBG) 3)/10/g' "$FILE"
sed -is 's/(. (\(syntax\.\)\?identifier) 2)/12/g' "$FILE"
sed -is 's/(. (\(syntax\.\)\?statement) 2)/1/g' "$FILE"
sed -is 's/(. (\(syntax\.\)\?preproc) 2)/5/g' "$FILE"
sed -is 's/(. (\(syntax\.\)\?typeDef) 2)/3/g' "$FILE"
sed -is 's/(. (\(syntax\.\)\?special) 2)/13/g' "$FILE"
# done;
# for i in $(find 'test/fnl/katdotnvim/' -name "*.fnl"); do
#   sed -is 's/(. (\(groups\.\)\?mainFG) 2)/7/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?mainBG) 2)/0/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?umbraFG) 2)/15/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?umbraBG) 2)/8/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?shadowBG) 2)/16/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?shadowFG) 2)/16/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?meldBG) 2)/16/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?meldFG) 2)/16/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?selectionFG) 2)/7/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?selectionBG) 2)/4/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?selectionBG) 3)/12/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?fillFG) 2)/7/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?fillBG) 2)/5/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?fillBG) 3)/13/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?highlightFG) 2)/7/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?highlightBG) 2)/6/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?highlightBG) 3)/14/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?errorFG) 2)/7/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?errorBG) 2)/1/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?warningFG) 2)/7/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?warningBG) 2)/9/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?infoFG) 2)/7/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?infoBG) 2)/3/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?infoBG) 3)/11/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?auxFG) 2)/7/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?auxBG) 2)/2/g' "$i"
#   sed -is 's/(. (\(groups\.\)\?auxBG) 3)/10/g' "$i"
#   sed -is 's/(. (\(syntax\.\)\?identifier) 2)/12/g' "$i"
#   sed -is 's/(. (\(syntax\.\)\?statement) 2)/1/g' "$i"
#   sed -is 's/(. (\(syntax\.\)\?preproc) 2)/5/g' "$i"
#   sed -is 's/(. (\(syntax\.\)\?typeDef) 2)/3/g' "$i"
#   sed -is 's/(. (\(syntax\.\)\?special) 2)/13/g' "$i"
# done;
echo "Done refactoring"
